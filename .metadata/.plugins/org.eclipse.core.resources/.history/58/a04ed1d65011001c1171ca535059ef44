package com.consumer;

import static org.junit.Assert.assertThat;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.io.IOException;
import java.util.HashMap;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.consumer.Bean.Current_Price;
import com.consumer.Bean.ProductData;
import com.consumer.controller.TargetController;
import com.consumer.helper.Helper;

@SpringBootTest
class TargetConsumerApplicationTests {
	@InjectMocks
    TargetController targetController;
     
    @Mock
     Helper helper;
    
	@Test

	public void testCreate() {
		MockHttpServletRequest request = new MockHttpServletRequest();
		RequestContextHolder.setRequestAttributes(new ServletRequestAttributes(request));
		ProductData prod=new ProductData();
		prod.setId("13860444");
		prod.setName("Nexa NEXT");
		Current_Price cp=new Current_Price();
		cp.setCurrencyCode("USD");
		cp.setValue("11.22");
		prod.setCurrent_price(cp);
		ResponseEntity respEntity=new ResponseEntity<>("Product is created successfully", HttpStatus.CREATED);
        try {
			when(helper.setPutPostConn(prod, "POST")).thenReturn(respEntity);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	 

		 
		ResponseEntity<Object> responseEntity = targetController.create(prod);
        assertEquals(responseEntity.getStatusCode(), respEntity.getStatusCode());
		
	}
	
	@Test

	public void testGetProductName() {
		MockHttpServletRequest request = new MockHttpServletRequest();
		RequestContextHolder.setRequestAttributes(new ServletRequestAttributes(request));
		ProductData prod=new ProductData();
		prod.setId("13860444");
		prod.setName("Nexa NEXT");
		Current_Price cp=new Current_Price();
		cp.setCurrencyCode("USD");
		cp.setValue("11.22");
		prod.setCurrent_price(cp);
		
		HashMap<String,String> prodMap=new HashMap();
		ResponseEntity respEntity=new ResponseEntity<>("Product is created successfully", HttpStatus.CREATED);
        try {
			when(helper.setPutPostConn(prod, "POST")).thenReturn(respEntity);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	 

		 
		ResponseEntity<Object> responseEntity = targetController.create(prod);
        assertEquals(responseEntity.getStatusCode(), respEntity.getStatusCode());
		
	}
	
	
}
