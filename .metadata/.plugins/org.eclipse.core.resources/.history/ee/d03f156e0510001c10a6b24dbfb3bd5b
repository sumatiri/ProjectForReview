package com.consumer.controller;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;

import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.consumer.Bean.ConfProperties;
import com.consumer.Bean.Current_Price;
import com.consumer.Bean.ProductData;
import com.consumer.exception.ProductNotCreatedException;
import com.consumer.exception.ProductNotFoundException;
import com.consumer.helper.Helper;

@RestController
public class TargetController {
	
	@Autowired
	Helper helper;
	
	@Autowired
	ConfProperties properties;
	
	@PostMapping(path="/products/{id}")
	
	public ResponseEntity<Object> create(@RequestBody ProductData prod) throws IOException {
		 
		return helper.setPutPostConn(prod, properties.getPostreq()); 
	}
	
	@PutMapping(path="products/{id}")
	
	public ResponseEntity<Object> update(@RequestBody ProductData prod) throws IOException {
		
		return helper.setPutPostConn(prod, properties.getPostreq()); 
	}
	
	private JSONObject errorResponse(String id) {
		System.out.println("WITHIN ERROR RESPONSE");
		JSONObject product=new JSONObject();
		product.put(properties.getName(), "Product Not found");
		product.put(properties.getId(), id);
		product.put(properties.getPrice(), "Data not found");
		product.put(properties.getCurr(), "Data not found");
		
		return product;
	}
	@GetMapping(path="products/{id}")
	
	public ProductData getProductName(@PathVariable String id)  {
		
		String inline="";
		ProductData pd=new ProductData();
		
		
		URL url=null;
		
		try {
			url=new URL(properties.getProdurl()+id);
			String[] arr=new String[1];
			arr[0]=new String(properties.getName());
			HashMap<String, String> result=helper.setGetConn(url, arr, properties.getGetreq());
			
			String name=result.get(properties.getName());
			pd.setName(name);
			pd.setId(id);
			
			url=new URL(properties.getPriceurl()+id);
			String[] arrPrice=new String[2];
			
			arrPrice[0]=properties.getPrice();
			arrPrice[1]=properties.getCode();
			
			HashMap<String,String> prResult=helper.setGetConn(url, arrPrice, properties.getGetreq());
			
			Current_Price pr=new Current_Price();
			String price=prResult.get(properties.getPrice());
			 
			pr.setValue(price);
			
			String currency=prResult.get(properties.getCode());
			pr.setCurrencyCode(currency);
			pd.setCurrent_price(pr);
			return pd;
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
 		}catch (RuntimeException e) {
			System.out.println("Throwing product not found exception");
			throw new ProductNotFoundException();
 		}
//			catch (ProductNotFoundException e){
//			JSONObject obj=errorResponse(id);
//		    pd.setId(id);
//			pd.setName((String)obj.get(properties.getName())); 
//			 
//		
//		
		return null;
		
	}

}
